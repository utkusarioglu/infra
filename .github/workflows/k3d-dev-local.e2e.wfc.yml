name: Test K3d Dev Local

on:
  workflow_call:
    inputs:
      certificatesRef:
        required: false
        default: main
        type: string
      e2eRef:
        required: false
        default: main
        type: string
      frontendRef:
        required: false
        default: main
        type: string
      grafanaRef:
        required: false
        default: main
        type: string
      infraRef:
        required: false
        default: main
        type: string
      jaegerRef:
        required: false
        default: main
        type: string
      lokiRef:
        required: false
        default: main
        type: string
      msRef:
        required: false
        default: main
        type: string
      notebooksRef:
        required: false
        default: main
        type: string
      otelCollectorsRef:
        required: false
        default: main
        type: string
      prometheusRef:
        required: false
        default: main
        type: string
      protoRef:
        required: false
        default: main
        type: string
      rbacRef:
        required: false
        default: main
        type: string

      webServerImageTag: 
        required: false
        type: string
      msImageTag: 
        required: false
        type: string

jobs:
  test-k3d-dev-local:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        certificatesRef: 
          - "${{ inputs.certificatesRef }}"
        e2eRef: 
          - "${{ inputs.e2eRef }}"
        frontendRef: 
          - "${{ inputs.frontendRef }}"
        grafanaRef: 
          - "${{ inputs.grafanaRef }}"
        infraRef: 
          - "${{ inputs.infraRef }}"
        jaegerRef: 
          - "${{ inputs.jaegerRef }}"
        lokiRef: 
          - "${{ inputs.lokiRef }}"
        msRef: 
          - "${{ inputs.msRef }}"
        notebooksRef: 
          - "${{ inputs.notebooksRef }}"
        otelCollectorsRef: 
          - "${{ inputs.otelCollectorsRef }}"
        prometheusRef: 
          - "${{ inputs.prometheusRef }}"
        protoRef: 
          - "${{ inputs.protoRef }}"
        rbacRef: 
          - "${{ inputs.rbacRef }}"

        vars: 
          - infraRepoRelPath: infra
            artifactsRelPath: artifacts
            logsRelPath: logs

    env:
      NODE_ENV: production

    steps:
      - name: Checkout `certificates`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-certificates
          ref: ${{ matrix.certificatesRef }}
          fetch-depth: 0
          path: certificates

      - name: Checkout `e2e`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-e2e
          ref: ${{ matrix.e2eRef }}
          fetch-depth: 0
          path: e2e

      - name: Checkout `frontend`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-frontend
          ref: ${{ matrix.frontendRef }}
          fetch-depth: 0
          path: frontend
      
      - name: Checkout `grafana`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-grafana
          ref: ${{ matrix.grafanaRef }}
          fetch-depth: 0
          path: grafana

      - name: Checkout `infra`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-infra
          ref: ${{ matrix.infraRef }}
          fetch-depth: 0
          path: infra

      - name: Checkout `jaeger`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-jaeger
          ref: ${{ matrix.jaegerRef }}
          fetch-depth: 0
          path: jaeger
      
      - name: Checkout `loki`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-loki
          ref: ${{ matrix.lokiRef }}
          fetch-depth: 0
          path: loki
      
      - name: Checkout `ms`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-ms
          ref: ${{ matrix.msRef }}
          fetch-depth: 0
          path: ms
      
      - name: Checkout `notebooks`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-notebooks
          ref: ${{ matrix.notebooksRef }}
          fetch-depth: 0
          path: notebooks
      
      - name: Checkout `otel-collectors`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-otel-collectors
          ref: ${{ matrix.otelCollectorsRef }}
          fetch-depth: 0
          path: otel-collectors
      
      - name: Checkout `prometheus`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-prometheus
          ref: ${{ matrix.prometheusRef }}
          fetch-depth: 0
          path: prometheus

      - name: Checkout `proto`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-proto
          ref: ${{ matrix.protoRef }}
          fetch-depth: 0
          path: proto

      - name: Checkout `rbac`
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/nextjs-grpc-rbac
          ref: ${{ matrix.rbacRef }}
          fetch-depth: 0
          path: rbac
      
      - name: Migrate vars and secrets files 
        working-directory: infra
        shell: bash
        run: |
          TEMP_B64_SECRETS_ABSPATH=/tmp/secrets.b64
          TEMP_ZIP_SECRETS_ABSPATH=/tmp/secrets.zip
          echo '${{ secrets.SECRET_FILES }}' > $TEMP_B64_SECRETS_ABSPATH
          cat $TEMP_B64_SECRETS_ABSPATH | base64 --decode \
            > $TEMP_ZIP_SECRETS_ABSPATH
          unzip -o $TEMP_ZIP_SECRETS_ABSPATH
          rm $TEMP_B64_SECRETS_ABSPATH $TEMP_ZIP_SECRETS_ABSPATH
        
      - name: Create Infra .env
        working-directory: infra
        env: 
          # From `docker.compose.common.yml`
          TZ: Etc/UTC0
          NODES_VOLUMES_ROOT: /dev/xvdf
          NODES_SOURCE_CODE_ROOT: /dev/xvdg
          CLUSTER_REGION: eu-central-1
          # From `docker.compose.dev`
          HOST_VOLUMES_ROOT: ${{ github.workspace }}/volumes/nextjs-grpc
          HOST_SOURCE_CODE_ROOT: ${{ github.workspace }}
          VAULT_ADDR: https://vault.nextjs-grpc.utkusarioglu.com:8200
          CLUSTER_HOST: local.dev.k3d.nextjs-grpc.projects.utkusarioglu.com
          PROJECT_ROOT_ABSPATH: ${{ github.workspace }}
          HOME: ${{ github.workspace }}
        run: |
          touch .env
          for v in \
            NODES_VOLUMES_ROOT \
            NODES_SOURCE_CODE_ROOT \
            CLUSTER_REGION \
            HOST_VOLUMES_ROOT \
            HOST_SOURCE_CODE_ROOT \
            VAULT_ADDR \
            CLUSTER_HOST \
            PROJECT_ROOT_ABSPATH \
            HOME;
          do
            echo "$v=${!v}" >> .env
          done
          cat .env

      # - name: Create Infrastructure
      #   working-directory: infra
      #   env: 
      #     # From `docker.compose.common.yml`
      #     TZ: Etc/UTC0
      #     NODES_VOLUMES_ROOT: /dev/xvdf
      #     NODES_SOURCE_CODE_ROOT: /dev/xvdg
      #     CLUSTER_REGION: eu-central-1
      #     # From `docker.compose.dev`
      #     HOST_VOLUMES_ROOT: ${{ github.workspace }}/volumes/nextjs-grpc
      #     HOST_SOURCE_CODE_ROOT: ${{ github.workspace }}
      #     VAULT_ADDR: https://vault.nextjs-grpc.utkusarioglu.com:8200
      #     CLUSTER_HOST: local.dev.k3d.nextjs-grpc.projects.utkusarioglu.com
      #     PROJECT_ROOT_ABSPATH: ${{ github.workspace }}
      #     HOME: ${{ github.workspace }}
      #   run: scripts/docker-run-terragrunt.sh
      
      - name: Create E2E .env
        working-directory: e2e
        env:
          BASE_URL: nextjs-grpc.utkusarioglu.com
          # E2E_BROWSERS: chrome,firefox,edge
          E2E_BROWSERS: chrome
          E2E_VIDEO_PADDING: 500,150
          # E2E_VIEWPORT_SIZES: 1920x1080,540x1200,480x850,480x720
          E2E_VIEWPORT_SIZES: 480x720
        run: |
          touch .env
          for v in \
            BASE_URL \
            E2E_VIEWPORT_SIZES \
            E2E_VIDEO_PADDING \
            E2E_BROWSERS;
          do
            echo "$v=${!v}" >> .env
          done
          cat .env

      - name: Run e2e tests
        working-directory: e2e
        run: scripts/docker-run-cypress.sh

      # - name: Save e2e artifacts
      #   if: ${{ always() }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: utkusarioglu-nextjs-grpc-e2e-artifacts
      #     path: e2e/.cypress/artifacts

      # - name: Save infra artifacts
      #   if: ${{ always() }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: utkusarioglu-nextjs-grpc-infra-artifacts
      #     path: infra/${{ matrix.vars.artifactsRelPath }}

      - name: Run containers
        env: 
          HOME: ${{ github.workspace }}
          BASE_URL: nextjs-grpc.utkusarioglu.com
          WORKDIR: /cypress-workspace
          CYPRESS_VERSION: 12.17.2
          # GITHUB_WORKSPACE: $GITHUB_WORKSPACE
        run: |
          docker compose \
            -f infra/.docker/docker-compose.common.yml \
            -f infra/.docker/docker-compose.ci.yml \
            up

      - name: Save infra logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: utkusarioglu-nextjs-grpc-infra-logs
          path: infra/${{ matrix.vars.logsRelPath }}
